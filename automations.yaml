#################################################################
- id: AlanAway
  alias: 'Alan Away'
  initial_state: 'on'    
  condition:
    - condition: state
      entity_id: input_boolean.alanhome
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.input_boolean.alanhome.last_changed -%}
          {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.alanhome.last_changed)) > 300 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: >
        {%- if states.groups.doors.last_changed -%}
          {{ (as_timestamp(now()) - as_timestamp(states.groups.doors.last_changed)) < 300 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.alandtse_nexus5, device_tracker.nexus_5
      to: 'not_home'
      for: '00:05:00'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.alanhome
    - service: logbook.log
      data_template:
        name: "Alan away: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Away.
          {%- endfor -%}

- id: RayAway 
  alias: 'Ray Away'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.rayhome
     state: 'on'
   - condition: template
     value_template: >
       {%- if states.input_boolean.rayhome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.rayhome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
   - condition: template
     value_template: >
       {%- if states.groups.doors.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.groups.doors.last_changed)) < 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.raywtse_note4, device_tracker.ray_tse_galaxy_note4
      to: 'not_home'
      for: '00:05:00'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.rayhome
    - service: logbook.log
      data_template:
        name: "Ray away: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Away.
          {%- endfor -%}

- id: AlanHome
  alias: 'Alan Home'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.alanhome
     state: 'off'
   - condition: template
     value_template: >
       {%- if states.input_boolean.alanhome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.alanhome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.alandtse_nexus5, device_tracker.nexus_5
      to: 'home'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.alanhome
    - service: logbook.log
      data_template:
        name: "Alan home: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Home.
          {%- endfor -%}

- id: RayHome
  alias: 'Ray Home'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.rayhome
     state: 'off'
   - condition: template
     value_template: >
       {%- if states.input_boolean.rayhome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.rayhome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.raywtse_note4, device_tracker.ray_tse_galaxy_note4
      to: 'home'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.rayhome
    - service: logbook.log
      data_template:
        name: "Ray home: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Home.
          {%- endfor -%}
#### Guests

- id: SolomonAway
  alias: 'Solomon Away'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.solomonhome
     state: 'on'
   - condition: template
     value_template: >
       {%- if states.input_boolean.solomonhome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.solomonhome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.70480f72bc9b
      to: 'not_home'
      for:
        minutes: 5
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.solomonhome
    - service: logbook.log
      data_template:
        name: "Solomon away: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Away.
          {%- endfor -%}
- id: SolomonHome
  alias: 'Solomon Home'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.solomonhome
     state: 'off'
   - condition: template
     value_template: >
       {%- if states.input_boolean.solomonhome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.solomonhome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.70480f72bc9b
      to: 'home'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.solomonhome
    - service: logbook.log
      data_template:
        name: "Solomon home: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Home.
          {%- endfor -%}

- id: OrlaAway
  alias: 'Orla Away'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.orlahome
     state: 'on'
   - condition: template
     value_template: >
       {%- if states.input_boolean.orlahome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.orlahome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.78fd940d9949
      to: 'not_home'
      for:
        minutes: 5
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.orlahome
    - service: logbook.log
      data_template:
        name: "Orla away: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Away.
          {%- endfor -%}
- id: OrlaHome
  alias: 'Orla Home'
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.orlahome
     state: 'off'
   - condition: template
     value_template: >
       {%- if states.input_boolean.orlahome.last_changed -%}
         {{ (as_timestamp(now()) - as_timestamp(states.input_boolean.orlahome.last_changed)) > 300 }}
       {%- else -%}
         true
       {%- endif -%}
  trigger:
    - platform: state
      entity_id: device_tracker.78fd940d9949
      to: 'home'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.orlahome
    - service: logbook.log
      data_template:
        name: "Orla home: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is Home.
          {%- endfor -%}

- id: AwayWhenArmed
  alias: 'Mark all away if Abode manually armed'
  initial_state: 'on'    
  condition:
   - condition: or
     conditions:
      - condition: state
        entity_id: input_boolean.rayhome
        state: 'on'
      - condition: state
        entity_id: input_boolean.alanhome
        state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.abodestatus
      to: 'away'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.rayhome
    - service: homeassistant.turn_off
      entity_id: input_boolean.alanhome
    - service: homeassistant.turn_off
      entity_id: input_boolean.solomonhome
    - service: homeassistant.turn_off
      entity_id: input_boolean.orlahome

#################################################################
## Security System
#################################################################

- id: DisarmFromAway
  alias: 'Disarm Abode from Away'
  initial_state: 'on'    
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'away'
  trigger:
   - platform: state
     entity_id: group.household
     to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: script.abodestandby

- id: GarageOpen
  alias: 'Garage Door open'
  condition:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.abodestatus
        state: 'home'
      - condition: state
        entity_id: input_select.abodestatus
        state: 'away'
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      to: 'Open'
      for:
        minutes: 10
  action:
    service: homeassistant.turn_on
    entity_id: script.notificationgaragedoor

- id: DisarmAtNight
  alias: 'Disarm Abode at night'
  initial_state: 'on'    
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'home'
  trigger:
   - platform: state
     entity_id: input_boolean.rayhome, input_boolean.alanhome
     to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: script.abodestandby

- id: ArmFromStandby
  alias: 'Abode Home from Standby'
  initial_state: 'on'    
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_select.abodestatus
       state: 'standby'
     - condition: time
       after: '21:15:00'
       before: '07:30:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
  trigger:
   - platform: time
     minutes: '/10'
     seconds: 00
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: Standby
  alias: 'Abode Standby'
  initial_state: 'on'    
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'on'
     - condition: time
       after: '08:15:00'
       before: '19:45:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
     - condition: or
       conditions:
        - condition: state
          entity_id: input_select.abodestatus
          state: 'home'
        - condition: state
          entity_id: input_select.abodestatus
          state: 'away'
  trigger:
   - platform: time
     minutes: '/10'
     seconds: 00
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: adjust_settings_changed_by_abode
  alias: 'Adjust ecobee settings changed by Abode'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: or
       conditions:
        - condition: state
          entity_id: input_select.abodestatus
          state: 'home'
        - condition: state
          entity_id: input_select.abodestatus
          state: 'standby'
     - condition: or
       conditions:
        - condition: state
          entity_id: input_boolean.thermo_away_main
          state: 'on'
        - condition: state
          entity_id: input_boolean.thermo_away_upstairs
          state: 'on'
  trigger:
   - platform: state
     entity_id: group.downstairs_occupancy, group.upstairs_occupancy
     from: 'off'
     to: 'on'
  action:
    - service: logbook.log
      data_template:
        name: "Ecobee home: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is enabled.
          {%- endfor -%}
    - service: climate.set_away_mode
      data_template:
        entity_id: >
          {% if trigger.entity_id == "group.downstairs_occupancy" %} climate.downstairs
          {% elif trigger.entity_id == "group.upstairs_occupancy" %} climate.upstairs
          {% endif %}
        away_mode: 'False'
    - service: climate.set_hold_mode
      data_template:
        entity_id: >
          {% if trigger.entity_id == "group.downstairs_occupancy" %} climate.downstairs
          {% elif trigger.entity_id == "group.upstairs_occupancy" %} climate.upstairs
          {% endif %}
        hold_mode: 'None'
- id: Arm
  alias: 'Arm Abode'
  initial_state: 'on'    
  condition:
    condition: state
    entity_id: input_boolean.abodeupdate
    state: 'on'
  trigger:
    - platform: state
      entity_id: group.household
      to: 'off'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: ArmAtNight
  alias: 'Abode Home at night'
  initial_state: 'on'    
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: state
       entity_id: group.household
       state: 'on'
  trigger:
    platform: time
    at: '20:00:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: DisarmMorning
  alias: 'Disarm Abode in the morning'
  initial_state: 'on'    
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'on'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
    platform: time
    at: '07:45:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: Alarm_to_Input_Select
  alias: Alarm to Input Select 
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.alarmstatus
  action:
    service: script.turn_on
    data_template: 
      entity_id: >
        {%- if is_state('input_select.alarmstatus', 'disarmed') -%}
          script.checkdisarm
        {%- elif is_state('input_select.alarmstatus', 'home') -%}
          script.checkarmhome
        {%- elif is_state('input_select.alarmstatus', 'away') -%}
          script.checkarmaway
        {%- endif -%}

#################################################################
## HASS Related
#################################################################


- id: UpdateAvailable
  alias: "Update Available Notification"
  initial_state: 'on'    
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.pushbullet
      data:
        message: "HomeAssistant {{ states('updater.updater') }} is now available"
        title: "Update HASS"
        target: device/Nexus5
    - service: persistent_notification.create
      data:
        title: "Update Available"
        message: >
          Home Assistant {{ states('updater.updater') }} is available, please [update](https://home-assistant.io/getting-started/installation-raspberry-pi-all-in-one/#upgrading).
        notification_id: "update_available"


#################################################################
## Home Automation Related
#################################################################

- id: AutoCloseGarage
  alias: 'Close garage door when Abode is Home or Away'
  initial_state: 'on'    
  condition:
   - condition: template
     value_template: >
       {%- if states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered  -%}
         {{(as_timestamp(now()) - as_timestamp(states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered)) > 60}}
       {%- else -%}
         true
       {%- endif -%}
   - condition: or
     conditions:
      - condition: state
        entity_id: input_select.abodestatus
        state: 'home'
      - condition: state
        entity_id: input_select.abodestatus
        state: 'away'
  trigger:
   - platform: state
     entity_id: cover.garage_door_opener
     to: 'open'
     for: 
       minutes: 5
  action:
    - service: script.notificationgaragedoor
- id: OwntracksRefresh
  alias: "Owntracks Refresh"
  initial_state: 'on'    
  condition:
   - condition: state
     entity_id: input_boolean.alanhome
     state: 'off'
   - condition: state
     entity_id: input_boolean.rayhome
     state: 'off'
  trigger:
    - platform: time
      minutes: '/15'
      seconds: 0
  action:
    service: script.owntracks_update
- id: downstairs_thermostat_to_input_boolean
  alias: Downstairs thermostat to Input_Boolean
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.downstairsthermmode
  action:
    service_template: >
      {%- if is_state('sensor.downstairsthermmode', 'Home') -%}
        homeassistant.turn_off
      {%- elif is_state('sensor.downstairsthermmode', 'Away') -%}
        homeassistant.turn_on
      {%- endif -%}
    entity_id: input_boolean.thermo_away_main

- id: change_downstairs_thermostat_mode
  alias: Change downstairs Thermostat mode
  initial_state: 'on'
  condition:
    condition: template
    value_template: >
      {%- if states.sensor.downstairsthermmode.last_changed -%}
        {{ (as_timestamp(now()) - as_timestamp(states.sensor.downstairsthermmode.last_changed)) > 60 }}
      {%- else -%}
        true
      {%- endif -%}
  trigger:
    platform: state
    entity_id: input_boolean.thermo_away_main
  action:
     service: climate.set_away_mode
     entity_id: climate.downstairs
     data_template:
       away_mode: >
         {%- if is_state('input_boolean.thermo_away_main', 'off') -%}
           off
         {%- elif is_state('input_boolean.thermo_away_main', 'on') -%}
           on
         {%- endif -%}
- id: upstairs_thermostat_to_input_boolean
  alias: Upstairs thermostat to Input_Boolean
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.upstairshermostatmode
  action:
    service_template: >
      {%- if is_state('sensor.upstairshermostatmode', 'Home') -%}
        homeassistant.turn_off
      {%- elif is_state('sensor.upstairshermostatmode', 'Away') -%}
        homeassistant.turn_on
      {%- endif -%}
    entity_id: input_boolean.thermo_away_upstairs

- id: change_upstairs_thermostat_mode
  alias: Change upstairs Thermostat mode
  initial_state: 'on'
  condition:
    condition: template
    value_template: >
      {%- if states.sensor.upstairshermostatmode.last_changed -%}
        {{ (as_timestamp(now()) - as_timestamp(states.sensor.upstairshermostatmode.last_changed)) > 60 }}
      {%- else -%}
        true
      {%- endif -%}
  trigger:
    platform: state
    entity_id: input_boolean.thermo_away_upstairs
  action:
    service: climate.set_away_mode
    entity_id: climate.upstairs
    data_template:
      away_mode: >
        {%- if is_state('input_boolean.thermo_away_upstairs', 'off') -%}
          off
        {%- elif is_state('input_boolean.thermo_away_upstairs', 'on') -%}
          on
        {%- endif -%}
- id: change_simplisafe_mode
  alias: Change Simplisafe mode
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: alarm_control_panel.simplisafe
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.alarmstatus
        option: >
           {%- if is_state('alarm_control_panel.simplisafe', 'disarmed') -%}
             disarmed
           {%- elif is_state('alarm_control_panel.simplisafe', 'armed_home') -%}
             home
           {%- elif is_state('alarm_control_panel.simplisafe', 'armed_away') -%}
             away
           {%- endif -%}

- id: auto_record_gate
  alias: Auto record gate on motion
  initial_state: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_boolean.recordgate
        state: 'on'
  trigger:
  - entity_id: binary_sensor.frontdoor_motion
    from: 'off'
    platform: state
    to: 'on'
  action:
    - service: shell_command.recordgate
      data_template:
        value: >
          {% set timestamp = trigger.to_state.last_changed %}
          {{ timestamp.strftime("%Y%m%d-%H%M%S") }}
    - service: notify.pushbullet
      data_template:
        message: "Frontdoor motion"
        title: "Doorbird Motion Detected"
        data:
            url: !secret mycloud_doorbird_url
