#Weather Sensor:
  - platform: command_line
    name: Raspberrypi CPU Temperature
    command: cat /sys/class/thermal/thermal_zone0/temp 2> /home/homeassistant/command.log
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: command_line
    name: Rpi2 CPU Temperature
    command: ssh -i /home/homeassistant/.ssh/localssh pi@192.168.1.81 'cat /sys/class/thermal/thermal_zone0/temp' 2> /home/homeassistant/command.log
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: command_line
    name: HDMI Input
    command: "/home/pi/hdmi/hdmi.py 0"
  - platform: pi_hole
  - platform: cert_expiry
    host: !secret ha_url
  - platform: darksky
    api_key: !secret darksky_key
    monitored_conditions:
      - wind_speed
      - cloud_cover
      - hourly_summary
      - daily_summary  
  - platform: yr
    monitored_conditions:
      - temperature
      - symbol
  - platform: wunderground
    api_key: !secret wunderground_key
    #pws_id: !secret wunderground_pws
    monitored_conditions:
      - weather
      - temp_f
      - pressure_in
      - wind_string
      - relative_humidity
#Time and Date Sensor
  - platform: time_date
    display_options:
      - 'time_date'
#  - platform: plex
#    name: PlexSpy
#    host: wdmycloudmirror
#    port: 32400
#    username: !secret plex_user
#    password: !secret plex_password
  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: swap_use_percent
    - type: processor_use
  - platform: template
    sensors:
      downstairsthermmode:
        friendly_name: "Downstairs Away mode"
        value_template: >-
           {%- if  states.climate.downstairs.attributes.away_mode == 'off' -%}
              Home
           {%- elif states.climate.downstairs.attributes.away_mode == 'on' -%}
              Away
           {%- elif states.climate.downstairs != None -%}
              unknown
           {%- endif -%}
      downstairsthermoper:
        friendly_name: "Downstairs Thermostat"
        value_template: >-
           {%- if states.climate.downstairs != None -%}
             {{ states.climate.downstairs.attributes.operation }}
           {%- else -%}
             unknown
           {%- endif -%}
        icon_template: >-
          {%- if states.climate.downstairs.attributes.operation == "heat" -%}
            mdi:fire
          {%- elif states.climate.downstairs.attributes.operation == "cool" -%}
            mdi:snowflake
          {%- else -%}
            mdi:fan
          {%- endif -%}
      upstairshermostatmode:
        friendly_name: "Upstairs Away Mode"
        value_template: >-
           {%- if  states.climate.upstairs.attributes.away_mode == 'off' -%}
              Home
           {%- elif states.climate.upstairs.attributes.away_mode == 'on' -%}
              Away
           {%- elif states.climate.upstairs != None -%}
              unknown
           {%- endif -%}
      upstairsthermostatoperation:
        friendly_name: "Upstairs Thermostat"
        value_template: >-
           {%- if states.climate.upstairs != None -%}
             {{ states.climate.upstairs.attributes.operation }}
           {%- else -%}
             unknown
           {%- endif -%}
        icon_template: >-
          {%- if states.climate.upstairs.attributes.operation == "heat" -%}
            mdi:fire
          {%- elif states.climate.upstairs.attributes.operation ==  "cool" -%}
            mdi:snowflake
          {%- else -%}
            mdi:fan
          {%- endif -%}
      estimated_overage_date:
        friendly_name: "Estimated Date of Overage"
        value_template: >-
           {% set start= (as_timestamp("2017-04-11 00:00:0")) %}
           {% set odometer = states.sensor.tesla_model_s_5yjsa1e13hf192718_mileage_sensor.state|round %}
           {% set end= (as_timestamp("2020-04-11 00:00:0")) %}
           {% set today = as_timestamp(now()) %}
           {% set secondsInDay= 60*60*24 %}
           {% set daysFromStart = ((start- today)/secondsInDay)|int|abs %}
           {% set daysTillEnd = ((end - today)/secondsInDay)|int|abs %}
           {% set totalDays = ((end - start)/secondsInDay)|int|abs %}
           {% set mileageLimit= 30000 %}
           {{((((totalDays * mileageLimit / (odometer/daysFromStart * totalDays) - daysFromStart)) * secondsInDay) + today)| timestamp_local}}
        icon_template: >-
            mdi:calendar
      estimated_final_mileage:
        friendly_name: "Estimated Final Mileage"
        unit_of_measurement: mi
        value_template: >-
           {% set start= (as_timestamp("2017-04-11 00:00:0")) %}
           {% set odometer = states.sensor.tesla_model_s_5yjsa1e13hf192718_mileage_sensor.state|round %}
           {% set end= (as_timestamp("2020-04-11 00:00:0")) %}
           {% set today = as_timestamp(now()) %}
           {% set secondsInDay= 60*60*24 %}
           {% set daysFromStart = ((start- today)/secondsInDay)|int|abs %}
           {% set daysTillEnd = ((end - today)/secondsInDay)|int|abs %}
           {% set totalDays = ((end - start)/secondsInDay)|int|abs %}
           {% set mileageLimit= 30000 %}
           {{'%0.2f'|format( odometer/daysFromStart * totalDays) }}
        icon_template: >-
            mdi:counter
      estimated_final_cost:
        friendly_name: "Estimated Final Cost"
        value_template: >-
           {% set mileageLimit= 30000 %}
           {% set overageCost= 0.25 %}
           {{'%0.2f'|format([(states.sensor.estimated_final_mileage.state|float - mileageLimit) * overageCost,0]|max) }}
        icon_template: >-
            mdi:currency-usd
      estimated_daily_mileage_limit:
        friendly_name: "Estimated Daily Mileage Limit"
        unit_of_measurement: mi
        value_template: >-
           {% set start= (as_timestamp("2017-04-11 00:00:0")) %}
           {% set odometer = states.sensor.tesla_model_s_5yjsa1e13hf192718_mileage_sensor.state|round %}
           {% set end= (as_timestamp("2020-04-11 00:00:0")) %}
           {% set today = as_timestamp(now()) %}
           {% set secondsInDay= 60*60*24 %}
           {% set daysFromStart = ((start- today)/secondsInDay)|int|abs %}
           {% set daysTillEnd = ((end - today)/secondsInDay)|int|abs %}
           {% set totalDays = ((end - start)/secondsInDay)|int|abs %}
           {% set mileageLimit= 30000 %}
           {{'%0.2f'|format( (mileageLimit - odometer) / daysTillEnd) }}
        icon_template: >-
            mdi:steering
      garage_temperature:
        friendly_name: "Garage Temperature"
        unit_of_measurement: "°F"
        value_template: >-
           {%- if is_state("device_tracker.tesla_model_3_5yj3e1ea2jf006634_location_tracker", "home") and is_state("device_tracker.tesla_model_s_5yjsa1e13hf192718_location_tracker", "home") -%}
             {{ '%0.1f'|format((states("sensor.tesla_model_3_5yj3e1ea2jf006634_temperature_sensor_outside") |float + states("sensor.tesla_model_s_5yjsa1e13hf192718_temperature_sensor_outside")|float) / 2 )}}
           {%- elif is_state("device_tracker.tesla_model_3_5yj3e1ea2jf006634_location_tracker", "home") -%}
             {{ states("sensor.tesla_model_3_5yj3e1ea2jf006634_temperature_sensor_outside")}}
           {%- elif is_state("device_tracker.tesla_model_s_5yjsa1e13hf192718_location_tracker", "home") -%}
             {{ states("sensor.tesla_model_s_5yjsa1e13hf192718_temperature_sensor_outside")|float}}
           {%- else -%}
             unknown
           {%- endif -%}
        device_class: "temperature"
      template_door_code_entered:
        value_template: >-
          {% if ((as_timestamp(strptime(states.sensor.date__time.state, "%Y-%m-%d, %H:%M")) - as_timestamp(states.sensor.lock_front_door_deadbolt_alarm_level.last_changed)) < 1) %}
            {{ states.sensor.lock_front_door_deadbolt_alarm_level.state }}
          {% else %}
            0
          {% endif %}
      front_door_lock_state:
        friendly_name: "Front Door Lock Status"
        #NOTE: To ensure consistent updates, we link to the update of the zwave entity id, and not the lock!
        entity_id:
          - sensor.lock_front_door_deadbolt_alarm_type
          - zwave.lock_front_door_deadbolt
        value_template: >-
            {% set alarm_type = states('sensor.lock_front_door_deadbolt_alarm_type') %}
            {% set alarm_level = states('sensor.lock_front_door_deadbolt_alarm_level') %}

            {#- Figure out if HASS set lock -#}
            {% if states.script.lockfrontdoor.attributes.last_triggered != None %}
            {% set last_lock = as_timestamp(states.lock.lock_front_door_lock.last_changed) - as_timestamp(states.script.lockfrontdoor.attributes.last_triggered) %}
            {%- else -%}
            {% set last_lock = 10000 %}
            {%- endif %}
            {% if states.script.unlockfrontdoor.attributes.last_triggered != None %}
            {% set last_unlock = as_timestamp(states.lock.lock_front_door_lock.last_changed) - as_timestamp(states.script.unlockfrontdoor.attributes.last_triggered) %}
            {%- else -%}
            {% set last_unlock = 10000 %}
            {%- endif %}
            {% set hass_lock = (is_state("lock.lock_front_door_lock", 'locked') and last_lock != None and last_lock < 10) %}
            {% set hass_unlock = (is_state("lock.lock_front_door_lock", 'unlocked') and last_unlock != None and last_unlock < 10) %}

            {#- Set User -#}
            {% if alarm_level == '1' %}
            {% set user = 'Default 1'%}
            {%- elif alarm_level == '2' -%}
            {% set user = 'Default 2'%}
            {%- elif alarm_level == '3' -%}
            {% set user = 'Alan or Ray' %}
            {%- elif alarm_level == '4' -%}
            {% set user = 'Mom or Dad' %}
            {%- else -%}
            {% set user = 'Unknown User ' ~ alarm_level %}
            {%- endif %}

            {#- Z-Wave/RF Lock: Alarm State 0x01 (???) -#}
            {%- if hass_lock -%}
                {{ 'locked with Home Assistant' }}

            {#- Z-Wave/RF Unlock: Alarm State 0x01 (???) -#}
            {%- elif hass_unlock -%}
                {{ 'unlocked with Home Assistant' }}

            {# Manually Locked: Alarm State 0x15 (21) #}
            {% elif alarm_type == '21' %}
                {{ 'manually locked' }}

            {#- Manual Unlock: Alarm State 0x16 (22) -#}
            {%- elif alarm_type == '22' -%}
                {{ 'manually unlocked' }}

            {#- Keypad Lock by keypad touch (lock & leave): Alarm State 0x12 (18) -#}
            {%- elif alarm_type ==  '18' -%}
                {{ 'locked with keypad' }}

            {#- Keypad Unlock: Alarm State 0x13 (19) -#}
            {%- elif alarm_type == '19' -%}
                {{ 'unlocked with keypad by user ' ~ user }}

            {%- else -%}
                {#- The lock status is sometimes unknown when HASS boots and Z-Wave is initialized.  In this case we want to use the last state reported by the lock itself (physically) if possible, otherwise we return 'unknown' -#}
                {# {{ 'unknown' }} #}
                {% set state = states.lock.lock_front_door_lock %}
                {% set status = (state.attributes.lock_status if state else '')|trim() %}
                {% set result = status if status != '' else 'unknown' %}
                {{ result|lower() }}
            {%- endif -%}
  - platform: ohmconnect
    id: !secret ohmconnect_id
  - platform: google_geocode
    name: Alan
    origin: device_tracker.alandtse_pixel2
    api_key: !secret google_key
  - platform: google_geocode
    name: Ray
    origin: device_tracker.raywtse_note4
    api_key: !secret google_key
    #  - platform: google_geocode
    #    name: Evie
    #origin: device_tracker.tesla_model_s_5yjsa1e13hf192718_location_tracker
    #  api_key: !secret google_key
    #- platform: google_geocode
    # name: Eva
    # origin: device_tracker.tesla_model_3_5yj3e1ea2jf006634_location_tracker
    # api_key: !secret google_key
    #- platform: google_geocode
    #  name: Model 3
    #  origin: device_tracker.tesla_model_3_5yj3e1ea7hf002153_location_tracker
    # api_key: !secret google_key
  - platform: mqtt
    state_topic: 'location/owner/Garage/40:4E:36:AF:8C:23'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'Alan Garage'
  - platform: mqtt
    state_topic: 'location/owner/Great Room/40:4E:36:AF:8C:23'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'Alan Great Room'
  - platform: mqtt
    state_topic: 'location/owner/Garage/A4:07:B6:CB:40:5F'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'Ray Garage'
  - platform: mqtt
    state_topic: 'location/owner/Great Room/A4:07:B6:CB:40:5F'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'Ray Great Room'
  - platform: min_max
    name: "Alan Home Occupancy Confidence"
    type: mean
    round_digits: 0
    entity_ids:
      - sensor.alan_garage
      - sensor.alan_great_room
  - platform: min_max
    name: "Ray Home Occupancy Confidence"
    type: mean
    round_digits: 0
    entity_ids:
      - sensor.ray_garage
      - sensor.ray_great_room
  - platform: time_date
    display_options:
      - 'date_time'
  - platform: places
    name: Alan
    devicetracker_id: device_tracker.alandtse_pixel2
    options: zone, place
    map_provider: google
    map_zoom: 18
    home_zone: zone.home
    api_key: !secret email_alan
  - platform: places
    name: Ray
    devicetracker_id: device_tracker.raywtse_note4
    options: zone, place
    map_provider: google
    map_zoom: 18
    home_zone: zone.home
    api_key: !secret email_ray
  - platform: places
    name: Evie
    devicetracker_id: device_tracker.tesla_model_s_5yjsa1e13hf192718_location_tracker
    options: zone, place
    map_provider: google
    map_zoom: 18
    home_zone: zone.home
    api_key: !secret email_alan
  - platform: places
    name: Eva
    devicetracker_id: device_tracker.tesla_model_3_5yj3e1ea2jf006634_location_tracker
    options: zone, place
    map_provider: google
    map_zoom: 18
    home_zone: zone.home
    api_key: !secret email_ray
  - platform: places
    name: Model 3
    devicetracker_id: device_tracker.tesla_model_3_5yj3e1ea7hf002153_location_tracker
    options: zone, place
    map_provider: google
    map_zoom: 18
    home_zone: zone.home
    api_key: !secret email_ray
